# An object with an ID
interface Node {
  id: ID!
}

type NewsItem {
  title: String!
  link: String!
  author: String
  pubDate: String!
  content: String
}

type Query {
  me: User
  news: [NewsItem]
  viewer: Viewer
  linesMany(
    after: String
    first: Int
    before: String
    last: Int
  ): CircleConnection
}

input createCircleInput {
  type: String!
  clientMutationId: String
}

type createCirclePayload {
  createdCircle: Circle
  viewer: Viewer
  clientMutationId: String
}

type Mutation {
  createCircle(input: createCircleInput!): createCirclePayload
}

type User {
  id: ID!
  email: String
}

type Circle implements Node {
  id: ID!
  _id: ID
  title: String
  pathFull: String
  pathName: String
  type: String
  public: Boolean
  viewers: [Viewer]
  styles: Circle
  tags(after: String, first: Int, before: String, last: Int): CircleConnection
  order: Int
  subtitle: String
  description: String
  media: Circle
  creator: Viewer
  editors: [Viewer]
  created: String
  lastUpdated: String
  value: String
  blob: String
  number: Int
  boolean: Boolean
  line: Circle
  lines: [Circle]
  linesMany(
    after: String
    first: Int
    before: String
    last: Int
  ): CircleConnection
}

type Viewer implements Node {
  id: ID!
  _id: ID!
  username: String!
  email: String!
  emailConfirmed: String
  styles: [Circle]
  home: Circle
  getCircleByPath(pathFull: String): Circle
}

# A connection to a list of items.
type CircleConnection {
  # Information to aid in pagination.
  pageInfo: PageInfo!
  # A list of edges.
  edges: [LinesMany]
}

# An edge in a connection.
type LinesMany {
  # The item at the end of the edge
  node: Circle
  # A cursor for use in pagination
  cursor: String!
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, are there more items?
  hasNextPage: Boolean!
  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!
  # When paginating backwards, the cursor to continue.
  startCursor: String
  # When paginating forwards, the cursor to continue.
  endCursor: String
}
